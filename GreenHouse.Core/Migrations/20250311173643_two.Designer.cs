// <auto-generated />
using System;
using GreenHouse.Core.MyContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreenHouse.Core.Migrations
{
    [DbContext(typeof(GreenHouseDbContext))]
    [Migration("20250311173643_two")]
    partial class two
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GreenHouse.Core.Entities.FavoriListesi", b =>
                {
                    b.Property<int>("FavoriListesiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavoriListesiId"));

                    b.Property<string>("ListeAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UyeId")
                        .HasColumnType("int");

                    b.HasKey("FavoriListesiId");

                    b.HasIndex("UyeId");

                    b.ToTable("FavoriListeleri");
                });

            modelBuilder.Entity("GreenHouse.Core.Entities.FavoriListesiDetay", b =>
                {
                    b.Property<int>("FavoriListeDetayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavoriListeDetayId"));

                    b.Property<int>("FavoriListesiId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("FavoriListeDetayId");

                    b.HasIndex("FavoriListesiId");

                    b.HasIndex("UrunId");

                    b.ToTable("FavoriListeDetaylari");
                });

            modelBuilder.Entity("GreenHouse.Core.Entities.Icerik", b =>
                {
                    b.Property<int>("IcerikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IcerikId"));

                    b.Property<string>("IcerikAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IcerikBilgi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RiskDurumuId")
                        .HasColumnType("int");

                    b.HasKey("IcerikId");

                    b.ToTable("Icerikler");
                });

            modelBuilder.Entity("GreenHouse.Core.Entities.KaraListe", b =>
                {
                    b.Property<int>("KaraListeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KaraListeId"));

                    b.Property<int>("IcerikId")
                        .HasColumnType("int");

                    b.Property<int>("UyeId")
                        .HasColumnType("int");

                    b.HasKey("KaraListeId");

                    b.ToTable("KaraListeler");
                });

            modelBuilder.Entity("GreenHouse.Core.Entities.Kategori", b =>
                {
                    b.Property<int>("KategoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriId"));

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UstKategoriId")
                        .HasColumnType("int");

                    b.HasKey("KategoriId");

                    b.HasIndex("UstKategoriId");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("GreenHouse.Core.Entities.RiskDurumu", b =>
                {
                    b.Property<int>("RiskDurumuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RiskDurumuId"));

                    b.Property<string>("RiskSeviyesi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RiskDurumuId");

                    b.ToTable("RiskDurumlari");
                });

            modelBuilder.Entity("GreenHouse.Core.Entities.Uretici", b =>
                {
                    b.Property<int>("UreticiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UreticiId"));

                    b.Property<string>("UreticiAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UreticiId");

                    b.ToTable("Ureticiler");
                });

            modelBuilder.Entity("GreenHouse.Core.Entities.Urun", b =>
                {
                    b.Property<int>("UrunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunId"));

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<int>("OlusturanKisi")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("UreticiId")
                        .HasColumnType("int");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UyeId")
                        .HasColumnType("int");

                    b.HasKey("UrunId");

                    b.HasIndex("KategoriId");

                    b.HasIndex("UreticiId");

                    b.HasIndex("UyeId");

                    b.ToTable("Urunler");
                });

            modelBuilder.Entity("GreenHouse.Core.Entities.UrunIcerik", b =>
                {
                    b.Property<int>("UrunIcerikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunIcerikId"));

                    b.Property<int>("IcerikId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("UrunIcerikId");

                    b.HasIndex("IcerikId");

                    b.HasIndex("UrunId");

                    b.ToTable("UrunIcerikler");
                });

            modelBuilder.Entity("GreenHouse.Core.Entities.Uye", b =>
                {
                    b.Property<int>("UyeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UyeId"));

                    b.Property<string>("MailAdresi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("UyeAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UyeSifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UyeSoyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UyelikTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("UyeId");

                    b.ToTable("Uyeler");
                });

            modelBuilder.Entity("GreenHouse.Core.Entities.FavoriListesi", b =>
                {
                    b.HasOne("GreenHouse.Core.Entities.Uye", "Uye")
                        .WithMany("FavoriListeleri")
                        .HasForeignKey("UyeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uye");
                });

            modelBuilder.Entity("GreenHouse.Core.Entities.FavoriListesiDetay", b =>
                {
                    b.HasOne("GreenHouse.Core.Entities.FavoriListesi", "FavoriListesi")
                        .WithMany("FavoriListesiDetaylar")
                        .HasForeignKey("FavoriListesiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreenHouse.Core.Entities.Urun", "Urun")
                        .WithMany("FavoriListesiDetaylar")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FavoriListesi");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("GreenHouse.Core.Entities.Kategori", b =>
                {
                    b.HasOne("GreenHouse.Core.Entities.Kategori", "UstKategori")
                        .WithMany("AltKategoriler")
                        .HasForeignKey("UstKategoriId");

                    b.Navigation("UstKategori");
                });

            modelBuilder.Entity("GreenHouse.Core.Entities.Urun", b =>
                {
                    b.HasOne("GreenHouse.Core.Entities.Kategori", "Kategori")
                        .WithMany("Urunler")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreenHouse.Core.Entities.Uretici", "Uretici")
                        .WithMany("Urunler")
                        .HasForeignKey("UreticiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreenHouse.Core.Entities.Uye", "Uye")
                        .WithMany("Urunler")
                        .HasForeignKey("UyeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Kategori");

                    b.Navigation("Uretici");

                    b.Navigation("Uye");
                });

            modelBuilder.Entity("GreenHouse.Core.Entities.UrunIcerik", b =>
                {
                    b.HasOne("GreenHouse.Core.Entities.Icerik", "Icerik")
                        .WithMany("UrunIcerikler")
                        .HasForeignKey("IcerikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreenHouse.Core.Entities.Urun", "Urun")
                        .WithMany("UrunIcerikler")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Icerik");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("GreenHouse.Core.Entities.FavoriListesi", b =>
                {
                    b.Navigation("FavoriListesiDetaylar");
                });

            modelBuilder.Entity("GreenHouse.Core.Entities.Icerik", b =>
                {
                    b.Navigation("UrunIcerikler");
                });

            modelBuilder.Entity("GreenHouse.Core.Entities.Kategori", b =>
                {
                    b.Navigation("AltKategoriler");

                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("GreenHouse.Core.Entities.Uretici", b =>
                {
                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("GreenHouse.Core.Entities.Urun", b =>
                {
                    b.Navigation("FavoriListesiDetaylar");

                    b.Navigation("UrunIcerikler");
                });

            modelBuilder.Entity("GreenHouse.Core.Entities.Uye", b =>
                {
                    b.Navigation("FavoriListeleri");

                    b.Navigation("Urunler");
                });
#pragma warning restore 612, 618
        }
    }
}
